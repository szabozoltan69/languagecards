# Generated by Django 4.2.14 on 2024-07-28 14:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import languagecards.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text1', models.TextField(blank=True, null=True, verbose_name='text1')),
                ('text2', models.TextField(blank=True, null=True, verbose_name='text2')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('position', models.IntegerField(default=1, verbose_name='position')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('is_learned', models.BooleanField(default=False, help_text='Check this, when you know this card.', verbose_name='is learned')),
                ('is_deprecated', models.BooleanField(default=False, help_text='Check this, when this card is to be hidden.', verbose_name='is deprecated')),
            ],
            options={
                'verbose_name': 'card',
                'verbose_name_plural': ' Kártyák',
                'ordering': ('text1', 'text2'),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('position', models.IntegerField(default=1, verbose_name='position')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('position', 'name'),
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('directory', models.CharField(max_length=255, verbose_name='directory')),
                ('file', models.FileField(blank=True, null=True, upload_to=languagecards.models.File.file_path, verbose_name='file')),
                ('language', models.CharField(blank=True, help_text='If Hungarian, can remain empty', max_length=29, null=True, verbose_name='language')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('file_url', models.URLField(blank=True, null=True, verbose_name='file url')),
                ('position', models.IntegerField(default=1, verbose_name='position')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('is_deprecated', models.BooleanField(default=False, help_text='Check this, when this file file is to be hidden.', verbose_name='is deprecated')),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
                'ordering': ('position', 'created_at', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Grammar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('grammar', models.TextField(verbose_name='grammar')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('position', models.IntegerField(default=1, verbose_name='position')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('is_html', models.BooleanField(default=False, help_text='Is this an HTML encoded text?', verbose_name='is HTML')),
                ('only_for_web', models.BooleanField(default=False, help_text='Check if this text is not for print page.', verbose_name='only for web')),
                ('is_deprecated', models.BooleanField(default=False, help_text='Check this, when this text is to be hidden.', verbose_name='is deprecated')),
            ],
            options={
                'verbose_name': 'grammar',
                'verbose_name_plural': 'grammar pages',
                'ordering': ('position', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('role', models.CharField(blank=True, max_length=100, verbose_name='role')),
                ('weight', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='weight of vote')),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='phone number')),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('score', models.IntegerField(default=1, help_text='-5 ... 5', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(-5)], verbose_name='score')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votes', to='languagecards.card', verbose_name='card')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votes', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'vote',
                'verbose_name_plural': 'votes',
                'ordering': ('score', 'created_at', 'user'),
            },
        ),
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('idea_url', models.URLField(blank=True, null=True, verbose_name='idea url')),
                ('position', models.IntegerField(default=1, verbose_name='position')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ideas', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'idea',
                'verbose_name_plural': 'ideas',
                'ordering': ('position', 'created_at', 'user'),
            },
        ),
        migrations.AddField(
            model_name='card',
            name='categories',
            field=models.ManyToManyField(blank=True, to='languagecards.category', verbose_name='categories'),
        ),
        migrations.AddField(
            model_name='card',
            name='files',
            field=models.ManyToManyField(blank=True, to='languagecards.file', verbose_name='file tracks'),
        ),
        migrations.AddField(
            model_name='card',
            name='grammars',
            field=models.ManyToManyField(blank=True, to='languagecards.grammar', verbose_name='grammars'),
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_banner', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'banner',
                'verbose_name_plural': 'banners',
            },
        ),
        migrations.AddConstraint(
            model_name='banner',
            constraint=models.UniqueConstraint(fields=('id',), name='unique_banner'),
        ),
    ]
